CREATE SCHEMA WLANHEATMAPMAN;

ALTER TABLE WLANHEATMAPMAN.GROUNDPLANIMAGE DROP CONSTRAINT SQL171014201327360;

DROP INDEX WLANHEATMAPMAN.SENSOR_MAC;

DROP INDEX WLANHEATMAPMAN.SENSOR_PING;

DROP INDEX WLANHEATMAPMAN.SENSOR_RSSI;

DROP INDEX WLANHEATMAPMAN.UNIQUE_SENSOR;

DROP INDEX WLANHEATMAPMAN.UNIQUE_SENSOR_SESSION_PING;

DROP INDEX WLANHEATMAPMAN.UNIQUE_SENSOR_SESSION_RSSI;

DROP TABLE WLANHEATMAPMAN.GROUNDPLANIMAGE;

DROP TABLE WLANHEATMAPMAN.PINGSPEED;

DROP TABLE WLANHEATMAPMAN.PLANINGSESSION;

DROP TABLE WLANHEATMAPMAN.RSSI;

DROP TABLE WLANHEATMAPMAN.SENSOR;

DROP SCHEMA WLANHEATMAPMAN RESTRICT;

CREATE SCHEMA WLANHEATMAPMAN AUTHORIZATION ADRIAN;

CREATE TABLE WLANHEATMAPMAN.GROUNDPLANIMAGE (
		ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY ( START WITH 0 INCREMENT BY 1 MINVALUE 0 MAXVALUE 2147483647 NO CYCLE CACHE 20),
		NAME VARCHAR(255) NOT NULL,
		FILENAME VARCHAR(255) NOT NULL,
		SAVEDTIME TIMESTAMP not null with DEFAULT CURRENT TIMESTAMP,
		DESCRIPTION VARCHAR(255)
	)
	DATA CAPTURE NONE;

CREATE TABLE WLANHEATMAPMAN.PINGSPEED (
		ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY ( START WITH 0 INCREMENT BY 1 MINVALUE 0 MAXVALUE 2147483647 NO CYCLE CACHE 20),
		SENSORMACID VARCHAR(15) NOT NULL,
		PLANINGSESSIONID INTEGER NOT NULL,
		SAVEDTIME TIMESTAMP DEFAULT CURRENT TIMESTAMP,
		RESPONSEMSTIME INTEGER NOT NULL,
		USEDPACKETBYTESIZE INTEGER NOT NULL
	)
	DATA CAPTURE NONE;

CREATE TABLE WLANHEATMAPMAN.PLANINGSESSION (
		ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY ( START WITH 0 INCREMENT BY 1 MINVALUE 0 MAXVALUE 2147483647 NO CYCLE CACHE 20),
		STARTTIME TIMESTAMP DEFAULT CURRENT TIMESTAMP,
		DESCRIPTION VARCHAR(255),
		GROUNDPLANID VARCHAR(255)
	)
	DATA CAPTURE NONE;

CREATE TABLE WLANHEATMAPMAN.RSSI (
		ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY ( START WITH 0 INCREMENT BY 1 MINVALUE 0 MAXVALUE 2147483647 NO CYCLE CACHE 20),
		SENSORMACID VARCHAR(15) NOT NULL,
		PLANINGSESSIONID INTEGER NOT NULL,
		SAVEDTIME TIMESTAMP DEFAULT CURRENT TIMESTAMP,
		RSSI INTEGER NOT NULL
	)
	DATA CAPTURE NONE;

CREATE TABLE WLANHEATMAPMAN.SENSOR (
		ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY ( START WITH 0 INCREMENT BY 1 MINVALUE 0 MAXVALUE 2147483647 NO CYCLE CACHE 20),
		MACID VARCHAR(17) NOT NULL,
		PLANINGSESSIONID INTEGER NOT NULL,
		IPADDRESS VARCHAR(15),
		NAME VARCHAR(300),
		LOCATIONNAME VARCHAR(300),
		MAPPOSX INTEGER,
		MAPPOSY INTEGER,
		MAPPOSZ INTEGER,
		GEOLON DOUBLE,
		GEOLAT DOUBLE
	)
	DATA CAPTURE NONE;

CREATE INDEX WLANHEATMAPMAN.SENSOR_MAC
	ON WLANHEATMAPMAN.SENSOR
	(MACID		ASC) PCTFREE 10
ALLOW REVERSE SCANS;

CREATE INDEX WLANHEATMAPMAN.SENSOR_PING
	ON WLANHEATMAPMAN.PINGSPEED
	(SENSORMACID		ASC) PCTFREE 10
ALLOW REVERSE SCANS;

CREATE INDEX WLANHEATMAPMAN.SENSOR_RSSI
	ON WLANHEATMAPMAN.RSSI
	(SENSORMACID		ASC) PCTFREE 10
ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX WLANHEATMAPMAN.UNIQUE_SENSOR
	ON WLANHEATMAPMAN.SENSOR
	(PLANINGSESSIONID		ASC,
	  MACID		ASC) PCTFREE 10
ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX WLANHEATMAPMAN.UNIQUE_SENSOR_SESSION_PING
	ON WLANHEATMAPMAN.PINGSPEED
	(PLANINGSESSIONID		ASC,
	  SENSORMACID		ASC,
	  SAVEDTIME		ASC) PCTFREE 10
ALLOW REVERSE SCANS;

CREATE UNIQUE INDEX WLANHEATMAPMAN.UNIQUE_SENSOR_SESSION_RSSI
	ON WLANHEATMAPMAN.RSSI
	(PLANINGSESSIONID		ASC,
	  SENSORMACID		ASC,
	  SAVEDTIME		ASC) PCTFREE 10
ALLOW REVERSE SCANS;

ALTER TABLE WLANHEATMAPMAN.GROUNDPLANIMAGE ADD CONSTRAINT SQL171014201327360 PRIMARY KEY
	(FILENAME);

CREATE UNIQUE INDEX WLANHEATMAPMAN.UNIQUE_GROUNDPLANIMAGE_NAME
	ON WLANHEATMAPMAN.GROUNDPLANIMAGE
	(NAME		ASC) PCTFREE 10
ALLOW REVERSE SCANS;	
	
--!DROP TABLE WLANHEATMAPMAN.Sensor;
CREATE TABLE WLANHEATMAPMAN.Sensor (
  macId VARCHAR(17) NOT NULL PRIMARY KEY,
  lastIpAddress VARCHAR(15) NULL,
  name VARCHAR(300) NULL,
  locationName VARCHAR(300) NULL,
  mapPosX INT NULL,
  mapPosY INT NULL,
  mapPosZ INT NULL,
  geoLon DOUBLE NULL,
  geoLat DOUBLE NULL
--  changeTime TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP
--  registerTime TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE UNIQUE INDEX WLANHEATMAPMAN.UNIQUE_SENSOR ON WLANHEATMAPMAN.Sensor (macId ASC);

--!DROP TABLE 'WLANHEATMAPMAN.RSSI';
CREATE TABLE WLANHEATMAPMAN.RSSI (
  sensorMacId VARCHAR(15) NOT NULL PRIMARY KEY,
  savedTime TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  rssi int NOT NULL,
  planingSessionId INT NOT NULL
);

CREATE UNIQUE INDEX WLANHEATMAPMAN.UNIQUE_SENSOR_SESSION_RSSI ON WLANHEATMAPMAN.RSSI (planingSessionId ASC, sensorMacId ASC);
CREATE UNIQUE INDEX WLANHEATMAPMAN.UNIQUE_SENSOR_RSSI ON WLANHEATMAPMAN.RSSI (sensorMacId ASC);
CREATE UNIQUE INDEX WLANHEATMAPMAN.UNIQUE_SENSOR_RSSI_TIME ON WLANHEATMAPMAN.RSSI (sensorMacId ASC, savedTime ASC);

--!DROP TABLE 'WLANHEATMAPMAN.PingSpeed';
CREATE TABLE WLANHEATMAPMAN.PingSpeed (
  sensorMacId VARCHAR(15) NOT NULL PRIMARY KEY,
  savedTime TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  responseMsTime int NOT NULL,
  usedPacketByteSize int NOT NULL,
  planingSessionId INT NOT NULL
);

CREATE UNIQUE INDEX WLANHEATMAPMAN.UNIQUE_SENSOR_SESSION_PING ON WLANHEATMAPMAN.PingSpeed (planingSessionId ASC, sensorMacId ASC);
CREATE UNIQUE INDEX WLANHEATMAPMAN.UNIQUE_SENSOR_PING ON WLANHEATMAPMAN.PingSpeed (sensorMacId ASC);
CREATE UNIQUE INDEX WLANHEATMAPMAN.UNIQUE_SENSOR_PING_TIME ON WLANHEATMAPMAN.PingSpeed (sensorMacId ASC, savedTime ASC);


CREATE TABLE WLANHEATMAPMAN.GroundPlanImage (
  filename VARCHAR(255) NOT NULL PRIMARY KEY,
  savedTime TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  description VARCHAR(255) NULL
);

CREATE TABLE WLANHEATMAPMAN.PlaningSession (
  id INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1),
  startTime TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  description VARCHAR(255) NULL,
  groundPlan VARCHAR(255)
);



-------------------------------------------------------------- EXAMPLES -------------------------------------------
--!DROP TABLE AGCAB_PROD.Customer;
CREATE TABLE AGCAB_PROD.Customer (
  idCustomer INT NOT NULL PRIMARY KEY,
  name VARCHAR(45) NULL,
  familyName VARCHAR(45) NULL,
  tel VARCHAR(25) NULL,
  mobil VARCHAR(25) NULL,
  mail VARCHAR(255) NULL,
  CNP CHAR(13) NULL,
  createTime TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE UNIQUE INDEX AGCAB_PROD.UNIQUE_CUSTOMER_NAME ON AGCAB_PROD.Customer  (name ASC, familyName ASC);

--!Drop table AGCAB_PROD.Offer;
CREATE TABLE AGCAB_PROD.Offer (
  idOffer INT NOT NULL PRIMARY KEY,
  amount INT NOT NULL,
  details VARCHAR(4096),
  createDate DATE NOT NULL DEFAULT CURRENT_DATE,
  Customer_idCustomer INT NOT NULL,
  CONSTRAINT fk_Offer_Customer
    FOREIGN KEY (Customer_idCustomer)
    REFERENCES AGCAB_PROD.Customer (idCustomer)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE INDEX AGCAB_PROD.fk_Offer_Customer_idx ON AGCAB_PROD.Offer (Customer_idCustomer ASC);


CREATE TABLE AGCAB_PROD.WorkType (
  idWorkType INT NOT NULL PRIMARY KEY,
  name VARCHAR(255) NULL,
  details VARCHAR(4096) NULL,
  defaultPrice INT NULL );

--!DROP TABLE AGCAB_PROD.Termin;
CREATE TABLE AGCAB_PROD.Termin (
  plannedTime TIMESTAMP NOT NULL PRIMARY KEY,
  finishTime TIMESTAMP NULL,
  realTime TIMESTAMP NULL,
  payment INT NULL,
  cancelationType CHAR(12) NULL,
  Customer_idCustomer INT NOT NULL,
  Offer_idOffer INT NOT NULL,
  WorkType_idWorkType INT NOT NULL,
  CONSTRAINT fk_Termin_Customer
    FOREIGN KEY (Customer_idCustomer)
    REFERENCES AGCAB_PROD.Customer (idCustomer)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Termin_Offer1
    FOREIGN KEY (Offer_idOffer)
    REFERENCES AGCAB_PROD.Offer (idOffer)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Termin_WorkType1
    FOREIGN KEY (WorkType_idWorkType)
    REFERENCES AGCAB_PROD.WorkType (idWorkType)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX AGCAB_PROD.fk_Termin_Customer_idx ON AGCAB_PROD.Termin (Customer_idCustomer ASC);
CREATE INDEX AGCAB_PROD.fk_Termin_Offer1_idx ON AGCAB_PROD.Termin (Offer_idOffer ASC);
CREATE INDEX AGCAB_PROD.fk_Termin_WorkType1_idx ON AGCAB_PROD.Termin (WorkType_idWorkType ASC);
    